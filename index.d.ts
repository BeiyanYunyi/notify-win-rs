/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export const POWERSHELL_APP_ID: string
export const WINDOWS_STORE_APP_ID: string
export type JsToast = Toast
export class Toast {
  constructor()
  /** The first text element, usually the title. */
  text1(text1: string): this
  /** The second text element, usually the body. */
  text2(text2: string): this
  /** The third text element, usually the body or attribution. */
  text3(text3: string): this
  /**
   * Set the scenario of this toast.\
   * The scenario adjusts a few behaviors to create a consistent and unified user experience.\
   * 1 for `Scenario::Alarm`\
   * 2 for `Scenario::IncomingCall`\
   * 3 for `Scenario::Urgent`\
   * other for `Scenario::Reminder`\
   * The value must between 0 and 255.
   */
  scenario(jsScenario: number): this
  /**
   * The amount of time the toast should display.\
   * true for `ToastDuration::Short`\
   * false for `ToastDuration::Long`
   */
  duration(jsDuration: boolean): this
  /** Set the tag of this toast. */
  tag(tag: string): this
  /** Set the group of this toast. */
  group(group: string): this
  /** Set a remote id for the notification that enables the system to correlate this notification with another one generated on another device. */
  remoteId(remoteId: string): this
  /**
   * Set the expiration time of this toats, starting from the moment it is shown.
   * After expiration, the toast will be removed from the Notification Center.
   * The value must be a u32 in milliseconds.
   */
  expiresIn(expiresIn: number): this
}
export type JsToaster = Toaster
export class Toaster {
  constructor(appId?: string | undefined | null)
  /** Show a toast. */
  show(toast: Toast): boolean
}
